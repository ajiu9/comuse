import{_ as o,a as t}from"./chunks/FunctionInfo.vue_vue_type_script_setup_true_lang.6OMUyywT.js";import{_ as r}from"./chunks/plugin-vue_export-helper.DlAUqK2U.js";import{i as p,o as l,j as e,g as a,a3 as c,y as h}from"./chunks/vue.3cVhufXJ.js";import"./chunks/metadata.CWa8svsd.js";const x=JSON.parse('{"title":"tryOnScopeDispose","description":"","frontmatter":{"category":"Component"},"headers":[],"relativePath":"core/tryOnScopeDispose/index.md","filePath":"core/tryOnScopeDispose/index.md","lastUpdated":1736241777000}'),d={name:"core/tryOnScopeDispose/index.md"};function k(g,s,f,m,y,_){const i=o,n=t;return l(),p("div",null,[s[0]||(s[0]=e("h1",{id:"tryonscopedispose",tabindex:"-1"},[h("tryOnScopeDispose "),e("a",{class:"header-anchor",href:"#tryonscopedispose","aria-label":'Permalink to "tryOnScopeDispose"'},"​")],-1)),a(i,{fn:"tryOnScopeDispose"}),s[1]||(s[1]=c(`<p>Safe <code>onScopeDispose</code>. Call <code>onScopeDispose()</code> if it&#39;s inside an effect scope lifecycle, if not, do nothing</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> tryOnScopeDispose</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">comuse-core</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tryOnScopeDispose</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span></code></pre></div><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/ajiu9/comuse/blob/main/packages/core/tryOnScopeDispose/index.ts" target="_blank" rel="noreferrer">Source</a> • <a href="https://github.com/ajiu9/comuse/blob/main/packages/core/tryOnScopeDispose/index.md" target="_blank" rel="noreferrer">Docs</a></p><h2 id="changelog" tabindex="-1">Changelog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;Changelog&quot;">​</a></h2>`,6)),a(n,{fn:"tryOnScopeDispose"})])}const O=r(d,[["render",k]]);export{x as __pageData,O as default};
